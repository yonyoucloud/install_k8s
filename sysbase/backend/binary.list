images:
registry.k8s.io/docker.io/prom/alertmanager/v0.28.1
registry.k8s.io/docker.io/prom/prometheus/v3.5.0
registry.k8s.io/docker.io/prom/node-exporter/v1.9.1
registry.k8s.io/docker.io/istio/proxyv2/1.26.3
registry.k8s.io/docker.io/istio/pilot/1.26.3
registry.k8s.io/docker.io/grafana/grafana/12.1.0
registry.k8s.io/docker.io/library/kong/3.8
registry.k8s.io/docker.io/library/busybox/latest
registry.k8s.io/docker.io/library/registry/3.0.0
registry.k8s.io/docker.io/jaegertracing/all-in-one/1.67.0
registry.k8s.io/docker.io/kubernetesui/dashboard-metrics-scraper/1.2.2
registry.k8s.io/docker.io/kubernetesui/dashboard-api/1.13.0
registry.k8s.io/docker.io/kubernetesui/dashboard-auth/1.3.0
registry.k8s.io/docker.io/kubernetesui/dashboard-web/1.7.0
registry.k8s.io/docker.io/calico/kube-controllers/v3.30.2
registry.k8s.io/docker.io/calico/cni/v3.30.2
registry.k8s.io/docker.io/calico/node/v3.30.2
registry.k8s.io/docker.io/jimmidyson/configmap-reload/v0.9.0
registry.k8s.io/quay.io/kiali/kiali/v2.8
registry.k8s.io/k8s.gcr.io/kube-state-metrics/kube-state-metrics/v2.16.0
registry.k8s.io/k8s.gcr.io/metrics-server/metrics-server/v0.8.0
registry.k8s.io/k8s.gcr.io/coredns/coredns/v1.12.2
registry.k8s.io/staging-k8s.gcr.io/pause/3.10.1
registry.k8s.io/sysbase.io/web-test/v1.0.0

basebin.gz:
/usr/local/bin/calicoctl
/usr/local/bin/cfssl-scan
/usr/local/bin/cfssl-certinfo
/usr/local/bin/etcdctl
/usr/local/bin/etcdutl
/usr/local/bin/kubemark
/usr/local/bin/cfssl-bundle
/usr/local/bin/cfssl
/usr/local/bin/cfssl-newkey
/usr/local/bin/kubeadm
/usr/local/bin/cfssljson
/usr/local/bin/kubectl
/usr/local/bin/helm
/usr/local/bin/istioctl
/usr/local/bin/updatesecret

bin:
master/usr/bin/kube-apiserver
master/usr/bin/kube-controller-manager
master/usr/bin/kube-scheduler
node/usr/bin/kube-proxy
node/usr/bin/kubelet
etcd/usr/bin/etcd

containerd/package.gz:
containerd/usr/bin/containerd
containerd/usr/bin/containerd-shim-runc-v2
containerd/usr/bin/containerd-stress
containerd/usr/bin/crictl
containerd/usr/bin/ctr
containerd/usr/bin/nerdctl
containerd/usr/bin/runc
containerd/opt/cni/bin/host-local
containerd/opt/cni/bin/bridge
containerd/opt/cni/bin/portmap
containerd/opt/cni/bin/firewall
containerd/opt/cni/bin/tuning


编译二进制：
cfssl:
git clone https://github.com/cloudflare/cfssl.git && git checkout v1.6.5 && make
/data/go/src/github.com/cloudflare/cfssl/bin

etcd:
git clone https://github.com/etcd-io/etcd.git && git checkout v3.6.4 && make build
/data/go/src/github.com/etcd-io/etcd/bin
或下载二进制即可：https://github.com/etcd-io/etcd/releases/tag/v3.6.4

# 已用containerd替换docker，以下相关docker的可以忽略
docker-cli:
git clone https://github.com/docker/cli.git && git checkout v20.10.14 && make -f docker.Makefile binary
/data/go/src/github.com/docker/cli/build

docker-engine:
git clone https://github.com/moby/moby.git && git checkout v20.10.14 && make BIND_DIR=. shell
/data/go/src/github.com/moby/moby/bundles/binary-daemon

编译docker太麻烦了，可以直接从这里下载:
https://download.docker.com/linux/static/stable/x86_64

kubernetes:
git clone https://github.com/kubernetes/kubernetes.git && git checkout v1.32.3 && make
/data/go/src/github.com/kubernetes/kubernetes/_output/bin

coredns配置:
https://github.com/coredns/deployment/blob/master/kubernetes/coredns.yaml.sed

metrics-server:
https://github.com/kubernetes-sigs/metrics-server/tree/v0.8.0/manifests/base
helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/
helm template metrics-server metrics-server/metrics-server --namespace kube-system > metrics-server.yaml

kube-state-metrics:
https://github.com/kubernetes/kube-state-metrics/blob/v2.16.0/examples/standard

containerd:
https://github.com/containerd/containerd/releases
./containerd config default > etc/containerd/config.toml

runc:
https://github.com/opencontainers/runc/releases

crictl:
https://github.com/kubernetes-sigs/cri-tools/releases

nerdctl:
https://github.com/containerd/nerdctl/releases

cni:
https://github.com/containernetworking/plugins/releases

dashboard:
helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/
helm template kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --namespace kube-system > kubernetes-dashboard.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    helm.sh/chart: kubernetes-dashboard-7.13.0
    app.kubernetes.io/instance: kubernetes-dashboard
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kubernetes-dashboard
  annotations:

  name: kong-dbless-config
  namespace: kube-system (需要指定一下命令空间，否则kong容器无法启动)

pause:
cd kubernetes/kubernetes/build/pause
make
docker build --sbom=false --pull --output=type=docker --platform linux/amd64 -t staging-k8s.gcr.io/pause:3.10.1-linux-amd64 --build-arg BASE=scratch --build-arg ARCH=amd64 .


# 粗暴的删除安装（生产环境慎用，会清理全部数据）：

# 发布机：
istioctl uninstall -y --purge

# Master节点：
systemctl stop kube-apiserver
systemctl disable kube-apiserver
ps aux | grep kube-apiserver | grep -v grep | awk '{if($2 != ""){system("kill -9 "$2)}}'

systemctl stop kube-controller-manager
systemctl disable kube-controller-manager
ps aux | grep kube-controller-manager | grep -v grep | awk '{if($2 != ""){system("kill -9 "$2)}}'

systemctl stop kube-scheduler
systemctl disable kube-scheduler
ps aux | grep kube-scheduler | grep -v grep | awk '{if($2 != ""){system("kill -9 "$2)}}'

# Etcd节点：
systemctl stop etcd
systemctl disable etcd
rm -rf /data/etcd/*

# Node节点：
systemctl stop kubelet
systemctl disable kubelet
ps aux | grep kubelet | grep -v grep | awk '{if($2 != ""){system("kill -9 "$2)}}'

systemctl stop kube-proxy
systemctl disable kube-proxy
ps aux | grep kube-proxy | grep -v grep | awk '{if($2 != ""){system("kill -9 "$2)}}'

systemctl stop docker
systemctl disable docker
rm -rf /data/docker/*
